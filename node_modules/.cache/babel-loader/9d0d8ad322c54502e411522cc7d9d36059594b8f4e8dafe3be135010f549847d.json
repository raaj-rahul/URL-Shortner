{"ast":null,"code":"export const generateMockReferrer = () => {\n  const referrers = ['direct', 'google.com', 'facebook.com', 'twitter.com', 'email'];\n  return referrers[Math.floor(Math.random() * referrers.length)];\n};\nexport const generateMockGeo = () => {\n  const locations = ['New York, US', 'London, UK', 'Tokyo, JP', 'Sydney, AU', 'Berlin, DE', 'Toronto, CA', 'Mumbai, IN', 'São Paulo, BR'];\n  return locations[Math.floor(Math.random() * locations.length)];\n};\nexport const createClickRecord = () => ({\n  timestamp: new Date().toISOString(),\n  referrer: generateMockReferrer(),\n  geo: generateMockGeo()\n});","map":{"version":3,"names":["generateMockReferrer","referrers","Math","floor","random","length","generateMockGeo","locations","createClickRecord","timestamp","Date","toISOString","referrer","geo"],"sources":["D:/URL Shortner/src/utils/analytics.js"],"sourcesContent":["export const generateMockReferrer = () => {\n  const referrers = ['direct', 'google.com', 'facebook.com', 'twitter.com', 'email'];\n  return referrers[Math.floor(Math.random() * referrers.length)];\n};\n\nexport const generateMockGeo = () => {\n  const locations = [\n    'New York, US',\n    'London, UK', \n    'Tokyo, JP',\n    'Sydney, AU',\n    'Berlin, DE',\n    'Toronto, CA',\n    'Mumbai, IN',\n    'São Paulo, BR'\n  ];\n  return locations[Math.floor(Math.random() * locations.length)];\n};\n\nexport const createClickRecord = () => ({\n  timestamp: new Date().toISOString(),\n  referrer: generateMockReferrer(),\n  geo: generateMockGeo()\n});"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAGA,CAAA,KAAM;EACxC,MAAMC,SAAS,GAAG,CAAC,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,aAAa,EAAE,OAAO,CAAC;EAClF,OAAOA,SAAS,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,SAAS,CAACI,MAAM,CAAC,CAAC;AAChE,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMC,SAAS,GAAG,CAChB,cAAc,EACd,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,aAAa,EACb,YAAY,EACZ,eAAe,CAChB;EACD,OAAOA,SAAS,CAACL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGG,SAAS,CAACF,MAAM,CAAC,CAAC;AAChE,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAAGA,CAAA,MAAO;EACtCC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCC,QAAQ,EAAEZ,oBAAoB,CAAC,CAAC;EAChCa,GAAG,EAAEP,eAAe,CAAC;AACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}